{"version":3,"sources":["components/Context/index.js","components/Button/index.js","components/Upload/index.js","components/Navbar/index.js","components/PageLayout/index.js","pages/Home/index.js","components/TextField/index.js","pages/BillResults/index.js","pages/EditBillResults/index.js","components/UploadRetailer/index.js","pages/UploadRetailerPage/index.js","pages/RetailerResults/index.js","pages/EditRetailerResults/index.js","pages/SelectBill/index.js","pages/Feedback/index.js","pages/Login/index.js","pages/Register/index.js","components/PopupDialog/index.js","components/ColumnChart/index.js","pages/Comparison/index.js","components/Theme/index.js","App.js","index.js"],"names":["Context","createContext","UserContext","_ref","children","user","setUser","useState","JSON","parse","localStorage","getItem","userBill","setUserBill","useEffect","setItem","stringify","React","createElement","Provider","value","Button","props","buttonType","type","Fragment","MUIButton","variant","color","onClick","style","textTransform","sx","borderRadius","boxShadow","paddingX","paddingY","fontWeight","fontSize","fontFamily","minWidth","maxWidth","&:hover","backgroundColor","Input","styled","Upload","useContext","file","setFile","blobFileURL","setblobFileURL","isLoading","setIsLoading","scannedFileData","setScannedFileData","navigate","useNavigate","Grid","container","justifyContent","alignItems","gap","item","xl","lg","md","sm","xs","accept","id","name","onChange","e","preventDefault","target","files","data","FormData","filename","Date","now","append","axios","post","then","res","publicURL","console","log","Box","display","flexDirection","outline","py","px","cursor","UploadIcon","opacity","Typography","fontStyle","IconButton","handleCloseButtonClick","CloseIcon","Object","keys","length","async","event","alert","fileName","scannedBillData","catch","error","Divider","window","location","handleViewResults","state","CircularProgress","Navbar","AppBar","position","borderBottom","Toolbar","Link","to","textDecoration","gridAutoFlow","handleLogout","clear","MenuIcon","borderColor","PageLayout","minHeight","overflow","paddingTop","bottom","right","Fab","size","aria-label","handleIssueButtonClick","ReportProblemOutlinedIcon","Home","my","mb","Textfield","textfieldType","MUITextfield","disabled","fontColor","border","rows","multiline","maxRows","minRows","BillResults","useLocation","align","spacing","justify","pt","providerName","startDate","dailySupplyUsage","peakUsage","offPeakUsage","shoulderUsage","controlledLoadUsage","postcode","endDate","dailySupplyCharge","peakCharge","offPeakCharge","shoulderCharge","controlledLoadCharge","billTotalCost","Stack","direction","marginY","userId","err","EditBillResults","retailer","setRetailer","setPostCode","setStartDate","setEndDate","setDailySupplyCharge","setPeakUsage","setPeakCharge","setDailySupplyUsage","setOffPeakUsage","setOffPeakCharge","setShoulderUsage","setShoulderCharge","setControlledLoadUsage","setControlledLoadCharge","setBillTotalCost","test","split","updatedScanValues","providerAbn","UploadRetailer","scannedRetailerPlanData","setScannedRetailerPlanData","userDetail","top5Plans","UploadRetailerPage","RetailerResults","provider","distributor","billFrequency","EditRetailerResults","setProvider","planId","setPlanId","contractDetails","setContractDetails","contractDetailsString","setContractDetailsString","setDistributor","setBillFrequency","toUpperCase","SelectBill","selectedBill","setSelectedBill","bills","setBills","get","params","userFiles","paddingtop","FormControl","width","Select","MenuProps","PaperProps","padding","map","bill","MenuItem","fileId","marginTop","Feedback","thumbsUpClicked","setThumbsUpClicked","thumbsDownClicked","setThumbsDownClicked","additionalFeedback","setAdditionalFeedback","marginBottom","handleThumbsUpClick","ThumbUpIcon","handleThumbsDownClick","ThumbDownIcon","trim","Login","email","setEmail","password","setPassword","margin","emailValidator","validate","topMargin","component","RouterLink","Register","setName","phone","setPhone","includes","PopupDialog","selectedBarDetails","selectedValue","InputBase","readOnly","height","fuelType","cost","providerWebsite","colors","BarChartComponent","setSelectedValue","open","setOpen","plans","forEach","element","index","temp1","push","handleClose","BarChart","CartesianGrid","strokeDasharray","XAxis","dataKey","angle","textAnchor","YAxis","Tooltip","Bar","fill","handleBarClick","targetId","matchingPlan","find","plan","entry","Cell","key","Dialog","onClose","DialogContent","DialogActions","Comparison","className","ColumnChart","alignContent","Theme","createTheme","palette","primary","light","main","dark","secondary","white","black","red","components","MuiButton","variants","App","ThemeProvider","theme","Routes","Route","path","ReactDOM","createRoot","document","getElementById","render","BrowserRouter","StrictMode"],"mappings":"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","file":"static/js/main.6c960da5.chunk.js","sourcesContent":["// React Components\r\nimport { createContext, useEffect, useState } from \"react\";\r\nimport React from \"react\";\r\n\r\nexport const Context = createContext(null);\r\nexport const UserContext = ({ children }) => {\r\n    const [user, setUser] = useState(\r\n        JSON.parse(localStorage.getItem(\"user\") || null)\r\n    );\r\n    const [userBill, setUserBill] = useState(\r\n        JSON.parse(localStorage.getItem(\"userBill\") || null)\r\n    );\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"user\", JSON.stringify(user));\r\n    }, [user]);\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"userBill\", JSON.stringify(userBill));\r\n    }, [userBill]);\r\n\r\n    return (\r\n        <Context.Provider value={{ user, setUser, userBill, setUserBill }}>\r\n            {children}\r\n        </Context.Provider>\r\n    );\r\n};\r\n","import { Button as MUIButton } from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nconst Button = (props) => {\r\n    const buttonType = props.type;\r\n\r\n    return (\r\n        <>\r\n            {buttonType === \"contained\" && (\r\n                <MUIButton\r\n                    variant=\"contained\"\r\n                    color=\"secondary\"\r\n                    onClick={props.onClick}\r\n                    style={{\r\n                        textTransform: \"none\",\r\n                    }}\r\n                    sx={{\r\n                        borderRadius: 3,\r\n                        boxShadow: 0,\r\n                        paddingX: 2,\r\n                        paddingY: 0.5,\r\n                        color: \"primary.main\",\r\n                        fontWeight: \"500\",\r\n                        fontSize: \"1.25rem\",\r\n                        fontFamily: \"sans-serif\",\r\n                        minWidth: \"7rem\",\r\n                        maxWidth: \"12rem\",\r\n                        \"&:hover\": {\r\n                            boxShadow: `inset 0px 0px 0px 1px #16434F`,\r\n                            backgroundColor: \"primary.main\",\r\n                            color: \"secondary.main\",\r\n                        },\r\n                    }}\r\n                >\r\n                    {props.children}\r\n                </MUIButton>\r\n            )}\r\n            {buttonType === \"outlined\" && (\r\n                <MUIButton\r\n                    variant=\"outlined\"\r\n                    color=\"secondary\"\r\n                    onClick={props.onClick}\r\n                    style={{\r\n                        textTransform: \"none\",\r\n                    }}\r\n                    sx={{\r\n                        borderRadius: 3,\r\n                        boxShadow: 0,\r\n                        paddingX: 2,\r\n                        paddingY: 0.5,\r\n                        color: \"secondary.main\",\r\n                        fontWeight: \"500\",\r\n                        fontSize: \"1.25rem\",\r\n                        fontFamily: \"sans-serif\",\r\n                        minWidth: \"7rem\",\r\n                        maxWidth: \"12rem\",\r\n                        \"&:hover\": {\r\n                            backgroundColor: \"secondary.main\",\r\n                            color: \"primary.main\",\r\n                        },\r\n                    }}\r\n                >\r\n                    {props.children}\r\n                </MUIButton>\r\n            )}\r\n\r\n        </>\r\n    );\r\n};\r\n\r\nexport default Button;\r\n","import { useState, useContext } from \"react\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport axios from \"axios\";\r\nimport { Context } from \"../Context\";\r\nimport {\r\n    Grid,\r\n    Box,\r\n    IconButton,\r\n    Typography,\r\n    styled,\r\n    CircularProgress,\r\n    Divider,\r\n} from \"@mui/material\";\r\nimport UploadIcon from \"@mui/icons-material/Upload\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport Button from \"../Button\";\r\n\r\nconst Input = styled(\"input\")`\r\n    display: none;\r\n`;\r\n\r\nfunction Upload() {\r\n    const { user } = useContext(Context);\r\n    const [file, setFile] = useState(null);\r\n    const [blobFileURL, setblobFileURL] = useState({});\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [scannedFileData, setScannedFileData] = useState({});\r\n\r\n    const handleCloseButtonClick = () => {\r\n        setFile(null);\r\n    };\r\n\r\n    const handleFileChange = (e) => {\r\n        e.preventDefault();\r\n        if (e.target.files !== null) {\r\n            const file = e.target.files[0];\r\n            setFile(file.name);\r\n            const data = new FormData();\r\n            const filename = Date.now() + file.name;\r\n            data.append(\"name\", filename);\r\n            data.append(\"file\", file);\r\n\r\n            axios.post(\"http://localhost:8080/upload\", data).then((res) => {\r\n                setblobFileURL(res.data.publicURL);\r\n                console.log(res.data.publicURL);\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleScanFile = async (event) => {\r\n        event.preventDefault();\r\n        if (file === null) {\r\n            alert(\"Error! Please upload a file before scanning the bill.\");\r\n        } else {\r\n            setIsLoading(true);\r\n            axios\r\n                .post(\"http://localhost:8080/scanBill\", {\r\n                    blobFileURL,\r\n                    fileName: file,\r\n                })\r\n                .then((res) => {\r\n                    setScannedFileData(res.data.scannedBillData);\r\n                    setIsLoading(false);\r\n                })\r\n                .catch((error) => {\r\n                    alert(error);\r\n                });\r\n        }\r\n    };\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const handleViewResults = () => {\r\n        navigate(\"/bill-results\", { state: scannedFileData });\r\n    };\r\n\r\n    return (\r\n        <Grid container justifyContent=\"center\" alignItems=\"center\" gap={5}>\r\n            <Grid item xl={6} lg={6} md={8} sm={8} xs={10}>\r\n                <label>\r\n                    <Input\r\n                        accept=\"image,pdf/*\"\r\n                        id=\"file\"\r\n                        name=\"file\"\r\n                        type=\"file\"\r\n                        onChange={handleFileChange}\r\n                    />\r\n                    <Box\r\n                        sx={{\r\n                            backgroundColor: \"primary.dark\",\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            justifyContent: \"center\",\r\n                            alignItems: \"center\",\r\n                            outline: \"2px dashed #16434F\",\r\n                            borderRadius: 5,\r\n                            gap: 2,\r\n                            py: 2,\r\n                            px: 10,\r\n                            \"&:hover\": { cursor: \"pointer\" },\r\n                        }}\r\n                    >\r\n                        <UploadIcon\r\n                            fontSize=\"large\"\r\n                            color=\"secondary\"\r\n                            sx={{ fontSize: 100, opacity: 0.6 }}\r\n                        />\r\n                        <Typography color=\"secondary\">\r\n                            Click anywhere to upload\r\n                        </Typography>\r\n                        <Typography\r\n                            color=\"secondary\"\r\n                            fontSize={16}\r\n                            sx={{ fontStyle: \"italic\", opacity: 0.5 }}\r\n                        >\r\n                            Max. file size 25 MB\r\n                        </Typography>\r\n                    </Box>\r\n                </label>\r\n            </Grid>\r\n            <Grid item xl={6} lg={6} md={8} sm={8} xs={10}>\r\n                {file && (\r\n                    <Box\r\n                        sx={{\r\n                            backgroundColor: \"primary.dark\",\r\n                            display: \"flex\",\r\n                            flexDirection: \"row\",\r\n                            justifyContent: \"space-between\",\r\n                            alignItems: \"center\",\r\n                            outline: \"1px solid grey\",\r\n                            borderRadius: 3,\r\n                            px: 1,\r\n                            py: 1,\r\n                        }}\r\n                    >\r\n                        <Box>{file}</Box>\r\n                        <IconButton onClick={handleCloseButtonClick}>\r\n                            <CloseIcon color=\"secondary\" />\r\n                        </IconButton>\r\n                    </Box>\r\n                )}\r\n            </Grid>\r\n            <Grid\r\n                item\r\n                xl={6}\r\n                lg={6}\r\n                md={8}\r\n                sm={8}\r\n                xs={10}\r\n                display=\"flex\"\r\n                flexDirection=\"column\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                gap={2}\r\n            >\r\n                {Object.keys(scannedFileData).length === 0 &&\r\n                    isLoading === false && (\r\n                        <>\r\n                            <Button type=\"contained\" onClick={handleScanFile}>\r\n                                Scan Bill\r\n                            </Button>\r\n                            {user && (\r\n                                <>\r\n                                    <Divider\r\n                                        style={{ color: \"secondary.main\" }}\r\n                                    >\r\n                                        OR\r\n                                    </Divider>\r\n                                    <Button\r\n                                        type=\"contained\"\r\n                                        onClick={(e) =>\r\n                                            (window.location = \"/select-bill\")\r\n                                        }\r\n                                    >\r\n                                        Select Bill\r\n                                    </Button>\r\n                                </>\r\n                            )}\r\n                        </>\r\n                    )}\r\n                {Object.keys(scannedFileData).length !== 0 &&\r\n                    isLoading === false && (\r\n                        <Button type=\"contained\" onClick={handleViewResults}>\r\n                            View Results\r\n                        </Button>\r\n                    )}\r\n                {isLoading === true && <CircularProgress color=\"secondary\" />}\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default Upload;\r\n","import { useContext } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Button from \"../Button\";\r\nimport { Context } from \"../Context\";\r\nimport {\r\n    AppBar,\r\n    Box,\r\n    Divider,\r\n    Toolbar,\r\n    Typography,\r\n    IconButton,\r\n} from \"@mui/material\";\r\nimport MenuIcon from \"@mui/icons-material/Menu\";\r\nimport React from \"react\";\r\n\r\nconst Navbar = () => {\r\n    const { user } = useContext(Context);\r\n\r\n    const handleLogout = () => {\r\n        localStorage.clear();\r\n        window.location = \"/\";\r\n    };\r\n\r\n    return (\r\n        <AppBar\r\n            color=\"primary\"\r\n            sx={{\r\n                position: \"fixed\",\r\n                boxShadow: 0,\r\n                borderBottom: `1px solid #16434F`,\r\n            }}\r\n        >\r\n            <Toolbar\r\n                sx={{\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"space-between\",\r\n                }}\r\n            >\r\n                <Link to=\"/\" style={{ textDecoration: \"none\" }}>\r\n                    <Typography\r\n                        sx={{\r\n                            fontFamily: \"Expletus Sans\",\r\n                            fontSize: \"1.75rem\",\r\n                            textDecoration: \"none\",\r\n                            color: \"secondary.main\",\r\n                            \"&:hover\": { cursor: \"pointer\" },\r\n                        }}\r\n                    >\r\n                        Tribal Good\r\n                    </Typography>\r\n                </Link>\r\n                {user ? (\r\n                    <Box\r\n                        sx={{\r\n                            display: { xs: \"none\", sm: \"none\", md: \"grid\" },\r\n                            gridAutoFlow: \"column\",\r\n                        }}\r\n                    >\r\n                        <Button type=\"contained\" onClick={handleLogout}>\r\n                            Logout\r\n                        </Button>\r\n                    </Box>\r\n                ) : (\r\n                    <Box\r\n                        sx={{\r\n                            display: { xs: \"none\", sm: \"none\", md: \"grid\" },\r\n                            gridAutoFlow: \"column\",\r\n                            gap: 2,\r\n                        }}\r\n                    >\r\n                        <Link to=\"/register\" style={{ textDecoration: \"none\" }}>\r\n                            <Button type=\"outlined\">Sign Up</Button>\r\n                        </Link>\r\n                        <Link to=\"/login\" style={{ textDecoration: \"none\" }}>\r\n                            <Button type=\"contained\">Sign In</Button>\r\n                        </Link>\r\n                    </Box>\r\n                )}\r\n\r\n                <Box\r\n                    sx={{\r\n                        display: { sm: \"grid\", md: \"none\" },\r\n                        gridAutoFlow: \"column\",\r\n                        gap: 2,\r\n                    }}\r\n                >\r\n                    <IconButton>\r\n                        <MenuIcon fontSize=\"large\" color=\"secondary\" />\r\n                    </IconButton>\r\n                </Box>\r\n            </Toolbar>\r\n            <Divider sx={{ borderColor: \"secondary.main\" }} />\r\n        </AppBar>\r\n    );\r\n};\r\n\r\nexport default Navbar;\r\n","import Navbar from \"../Navbar\";\r\n// import CustomizedSteppers from \"../Stepper\";\r\nimport { Box } from \"@mui/material\";\r\nimport Fab from \"@mui/material/Fab\";\r\nimport ReportProblemOutlinedIcon from \"@mui/icons-material/ReportProblemOutlined\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport React from \"react\";\r\n\r\nconst PageLayout = ({ children }) => {\r\n    const navigate = useNavigate();\r\n\r\n    const handleIssueButtonClick = () => {\r\n        navigate(\"/feedback\");\r\n    };\r\n    return (\r\n        <Box\r\n            sx={{\r\n                backgroundColor: \"primary.main\",\r\n                minHeight: \"100vh\",\r\n                overflow: \"hidden\",\r\n            }}\r\n        >\r\n            <Navbar />\r\n            <Box sx={{ paddingTop: 10 }}>\r\n                {/* <CustomizedSteppers /> */}\r\n                {children}\r\n            </Box>\r\n            <div style={{ position: \"fixed\", bottom: \"30px\", right: \"30px\" }}>\r\n                <Fab\r\n                    color=\"primary\"\r\n                    size=\"medium\"\r\n                    aria-label=\"report-issue\"\r\n                    onClick={handleIssueButtonClick}\r\n                >\r\n                    <ReportProblemOutlinedIcon />\r\n                </Fab>\r\n            </div>\r\n        </Box>\r\n    );\r\n};\r\n\r\nexport default PageLayout;\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport Upload from \"../../components/Upload\";\r\nimport PageLayout from \"../../components/PageLayout\";\r\nimport React from \"react\";\r\n\r\nconst Home = () => {\r\n    return (\r\n        <PageLayout>\r\n            <Box\r\n                sx={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                }}\r\n            >\r\n                <Typography\r\n                    fontSize={{ xs: \"4rem\", sm: \"5rem\" }}\r\n                    fontWeight=\"bold\"\r\n                    color=\"secondary\"\r\n                    my={3}\r\n                >\r\n                    WELCOME\r\n                </Typography>\r\n                <Typography\r\n                    fontSize={{ xs: \"1.5rem\", sm: \"2rem\" }}\r\n                    color=\"secondary\"\r\n                    mb={3}\r\n                >\r\n                    Upload a bill to start!\r\n                </Typography>\r\n                <Upload />\r\n            </Box>\r\n        </PageLayout>\r\n    );\r\n};\r\n\r\nexport default Home;\r\n","import { TextField as MUITextfield } from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nconst Textfield = (props) => {\r\n    const textfieldType = props.type;\r\n    const scannedFileData = props.value;\r\n\r\n    return (\r\n        <>\r\n            {textfieldType === \"disabled\" && (\r\n                <MUITextfield\r\n                    disabled\r\n                    id=\"outlined-basic\"\r\n                    variant=\"outlined\"\r\n                    fontColor=\"primary.dark\"\r\n                    value={scannedFileData}\r\n                    sx={{\r\n                        border: \"2px solid\",\r\n                        borderColor: \"secondary.main\",\r\n                        borderRadius: 2,\r\n                        minWidth: \"400px\",\r\n                        backgroundColor: \"primary.dark\",\r\n                        color: \"primary.dark\",\r\n                        fontColor: \"secondary.main\",\r\n                        fontWeight: \"500\",\r\n                        fontSize: \"1.25rem\",\r\n                        fontFamily: \"sans-serif\",\r\n                        maxWidth: \"800px\",\r\n                    }}\r\n                >\r\n                    {props.children}\r\n                </MUITextfield>\r\n            )}\r\n            {textfieldType === \"outlined\" && (\r\n                <MUITextfield\r\n                    id=\"outlined-basic\"\r\n                    variant=\"outlined\"\r\n                    fontColor=\"primary.dark\"\r\n                    rows={4}\r\n                    value={scannedFileData}\r\n                    onChange={props.onChange}\r\n                    sx={{\r\n                        border: \"2px solid\",\r\n                        borderColor: \"secondary.main\",\r\n                        borderRadius: 2,\r\n                        minWidth: \"400px\",\r\n                        backgroundColor: \"primary.dark\",\r\n                        color: \"primary.dark\",\r\n                        fontColor: \"secondary.main\",\r\n                        fontWeight: \"500\",\r\n                        fontSize: \"1.25rem\",\r\n                        fontFamily: \"sans-serif\",\r\n                        // maxWidth: \"12rem\",\r\n                    }}\r\n                >\r\n                    {props.children}\r\n                </MUITextfield>\r\n            )}\r\n            {textfieldType === \"multilined\" && (\r\n                <MUITextfield\r\n                    multiline\r\n                    id=\"outlined-multiline-flexible\"\r\n                    maxRows={6}\r\n                    minRows={5}\r\n                    variant=\"outlined\"\r\n                    fontColor=\"primary.dark\"\r\n                    value={scannedFileData}\r\n                    onChange={props.onChange}\r\n                    sx={{\r\n                        border: \"2px solid\",\r\n                        borderColor: \"secondary.main\",\r\n                        borderRadius: 2,\r\n                        minWidth: \"500px\",\r\n                        backgroundColor: \"primary.dark\",\r\n                        color: \"primary.dark\",\r\n                        fontColor: \"secondary.main\",\r\n                        fontWeight: \"500\",\r\n                        fontSize: \"1.25rem\",\r\n                        fontFamily: \"sans-serif\",\r\n                    }}\r\n                >\r\n                    {props.children}\r\n                </MUITextfield>\r\n            )}\r\n            {textfieldType === \"password\" && (\r\n                <MUITextfield\r\n                    id=\"password\"\r\n                    type=\"password\"\r\n                    variant=\"outlined\"\r\n                    fontColor=\"primary.dark\"\r\n                    rows={4}\r\n                    value={scannedFileData}\r\n                    onChange={props.onChange}\r\n                    sx={{\r\n                        border: \"2px solid\",\r\n                        borderColor: \"secondary.main\",\r\n                        borderRadius: 2,\r\n                        minWidth: \"400px\",\r\n                        backgroundColor: \"primary.dark\",\r\n                        color: \"primary.dark\",\r\n                        fontColor: \"secondary.main\",\r\n                        fontWeight: \"500\",\r\n                        fontSize: \"1.25rem\",\r\n                        fontFamily: \"sans-serif\",\r\n                        // maxWidth: \"12rem\",\r\n                    }}\r\n                >\r\n                    {props.children}\r\n                </MUITextfield>\r\n            )}\r\n\r\n\r\n\r\n        </>\r\n    );\r\n};\r\nexport default Textfield;\r\n","import { useContext } from \"react\";\r\nimport PageLayout from \"../../components/PageLayout\";\r\nimport Button from \"../../components/Button\";\r\nimport Textfield from \"../../components/TextField\";\r\nimport { Context } from \"../../components/Context\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { Grid, Typography, Stack } from \"@mui/material\";\r\nimport React from \"react\";\r\n\r\nimport axios from \"axios\";\r\n\r\nfunction BillResults(props) {\r\n    const location = useLocation();\r\n    const scannedFileData = location.state;\r\n\r\n    const { user, setUserBill } = useContext(Context);\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const handleEditClick = (event) => {\r\n        navigate(\"/edit-bill-results\", { state: scannedFileData });\r\n    };\r\n\r\n    const handleContClick = (event) => {\r\n        // if logged in user, save data to Db\r\n        if (user) {\r\n            axios\r\n                .post(\"http://localhost:8080/insertData\", {\r\n                    scannedFileData,\r\n                    userId: user.id,\r\n                })\r\n                .catch((err) => {\r\n                    alert(\"Data could not be entered, Try again!\");\r\n                });\r\n        }\r\n        // if guest user, save data to localStorage\r\n        else {\r\n            setUserBill(scannedFileData);\r\n        }\r\n        navigate(\"/upload-retailer\");\r\n    };\r\n\r\n    return (\r\n        <PageLayout>\r\n            <Typography\r\n                fontSize={{ xs: \"4rem\", sm: \"5rem\" }}\r\n                fontWeight=\"bold\"\r\n                color=\"secondary\"\r\n                align=\"center\"\r\n            >\r\n                RESULTS\r\n            </Typography>\r\n            <Typography\r\n                fontSize={{ xs: \"1rem\", sm: \"1.5rem\" }}\r\n                fontWeight=\"medium\"\r\n                color=\"secondary\"\r\n                align=\"center\"\r\n                my={1}\r\n            >\r\n                Your bill has been scanned successfully.\r\n                <br />\r\n                Please ensure that all information is correct.\r\n            </Typography>\r\n            <Grid\r\n                container\r\n                spacing={2}\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                sx={{\r\n                    display: \"flex\",\r\n                    align: \"center\",\r\n                }}\r\n            >\r\n                <Grid\r\n                    item\r\n                    xs={12}\r\n                    sm={12}\r\n                    md={6}\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                >\r\n                    <Typography fontWeight=\"bold\" color=\"secondary\" pt={2}>\r\n                        RETAILER\r\n                    </Typography>\r\n                    <Textfield\r\n                        type=\"disabled\"\r\n                        value={scannedFileData.providerName}\r\n                    ></Textfield>\r\n                    <Typography fontWeight=\"bold\" color=\"secondary\" pt={2}>\r\n                        START DATE\r\n                    </Typography>\r\n                    <Textfield\r\n                        type=\"disabled\"\r\n                        value={scannedFileData.startDate}\r\n                    />\r\n                    <Typography fontWeight=\"bold\" color=\"secondary\" pt={2}>\r\n                        DAILY SUPPLY USAGE\r\n                    </Typography>\r\n                    <Textfield\r\n                        type=\"disabled\"\r\n                        value={scannedFileData.dailySupplyUsage}\r\n                    ></Textfield>\r\n                    <Typography fontWeight=\"bold\" color=\"secondary\" pt={2}>\r\n                        PEAK USAGE\r\n                    </Typography>\r\n                    <Textfield\r\n                        type=\"disabled\"\r\n                        value={scannedFileData.peakUsage}\r\n                    />\r\n                    <Typography fontWeight=\"bold\" color=\"secondary\" pt={2}>\r\n                        OFF PEAK USAGE\r\n                    </Typography>\r\n                    <Textfield\r\n                        type=\"disabled\"\r\n                        value={scannedFileData.offPeakUsage}\r\n                    />\r\n                    <Typography fontWeight=\"bold\" color=\"secondary\" pt={2}>\r\n                        SHOULDER USAGE\r\n                    </Typography>\r\n                    <Textfield\r\n                        type=\"disabled\"\r\n                        value={scannedFileData.shoulderUsage}\r\n                    />\r\n                    <Typography fontWeight=\"bold\" color=\"secondary\" pt={2}>\r\n                        CONTROLLED LOAD USAGE\r\n                    </Typography>\r\n                    <Textfield\r\n                        type=\"disabled\"\r\n                        value={scannedFileData.controlledLoadUsage}\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid\r\n                    item\r\n                    sx={12}\r\n                    sm={12}\r\n                    md={6}\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                >\r\n                    <Typography fontWeight=\"bold\" color=\"secondary\" pt={2}>\r\n                        POSTCODE\r\n                    </Typography>\r\n                    <Textfield\r\n                        type=\"disabled\"\r\n                        value={scannedFileData.postcode}\r\n                    />\r\n                    <Typography fontWeight=\"bold\" color=\"secondary\" pt={2}>\r\n                        END DATE\r\n                    </Typography>\r\n                    <Textfield\r\n                        type=\"disabled\"\r\n                        value={scannedFileData.endDate}\r\n                    />\r\n                    <Typography fontWeight=\"bold\" color=\"secondary\" pt={2}>\r\n                        DAILY SUPPLY CHARGE\r\n                    </Typography>\r\n                    <Textfield\r\n                        type=\"disabled\"\r\n                        value={scannedFileData.dailySupplyCharge}\r\n                    />\r\n                    <Typography fontWeight=\"bold\" color=\"secondary\" pt={2}>\r\n                        PEAK CHARGE\r\n                    </Typography>\r\n                    <Textfield\r\n                        type=\"disabled\"\r\n                        value={scannedFileData.peakCharge}\r\n                    />\r\n                    <Typography fontWeight=\"bold\" color=\"secondary\" pt={2}>\r\n                        OFF PEAK CHARGE\r\n                    </Typography>\r\n                    <Textfield\r\n                        type=\"disabled\"\r\n                        value={scannedFileData.offPeakCharge}\r\n                    />\r\n                    <Typography fontWeight=\"bold\" color=\"secondary\" pt={2}>\r\n                        SHOULDER CHARGE\r\n                    </Typography>\r\n                    <Textfield\r\n                        type=\"disabled\"\r\n                        value={scannedFileData.shoulderCharge}\r\n                    />\r\n                    <Typography fontWeight=\"bold\" color=\"secondary\" pt={2}>\r\n                        CONTROLLED LOAD CHARGE\r\n                    </Typography>\r\n                    <Textfield\r\n                        type=\"disabled\"\r\n                        value={scannedFileData.controlledLoadCharge}\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            <Grid\r\n                container\r\n                spacing={2}\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                sx={{\r\n                    display: \"flex\",\r\n                    align: \"center\",\r\n                }}\r\n            >\r\n                <Grid item xs={12} md={6}>\r\n                    <Grid>\r\n                        <Typography fontWeight=\"bold\" color=\"secondary\" pt={2}>\r\n                            TOTAL PAID\r\n                        </Typography>\r\n                        <Textfield\r\n                            type=\"disabled\"\r\n                            value={scannedFileData.billTotalCost}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Stack\r\n                spacing={9}\r\n                direction=\"row\"\r\n                sx={{\r\n                    marginY: \"3rem\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                }}\r\n            >\r\n                <Button type=\"contained\" onClick={handleEditClick}>\r\n                    Edit\r\n                </Button>\r\n                <Button type=\"contained\" onClick={handleContClick}>\r\n                    Continue\r\n                </Button>\r\n            </Stack>\r\n        </PageLayout>\r\n    );\r\n}\r\n\r\nexport default BillResults;\r\n","import { useState, useEffect, useContext } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { Typography, Grid, Stack } from \"@mui/material\";\r\nimport axios from \"axios\";\r\nimport Textfield from \"../../components/TextField\";\r\nimport PageLayout from \"../../components/PageLayout\";\r\nimport Button from \"../../components/Button\";\r\nimport { Context } from \"../../components/Context\";\r\nimport React from \"react\";\r\n\r\nfunction EditBillResults() {\r\n    const [retailer, setRetailer] = useState(\"\");\r\n    const [postcode, setPostCode] = useState(\"\");\r\n    const [startDate, setStartDate] = useState(\"\");\r\n    const [endDate, setEndDate] = useState(\"\");\r\n\r\n    const [dailySupplyCharge, setDailySupplyCharge] = useState(\"\");\r\n    const [peakUsage, setPeakUsage] = useState(\"\");\r\n    const [peakCharge, setPeakCharge] = useState(\"\");\r\n    const [dailySupplyUsage, setDailySupplyUsage] = useState(\"\");\r\n\r\n    const [offPeakUsage, setOffPeakUsage] = useState(\"\");\r\n    const [offPeakCharge, setOffPeakCharge] = useState(\"\");\r\n    const [shoulderUsage, setShoulderUsage] = useState(\"\");\r\n    const [shoulderCharge, setShoulderCharge] = useState(\"\");\r\n    const [controlledLoadUsage, setControlledLoadUsage] = useState(\"\");\r\n    const [controlledLoadCharge, setControlledLoadCharge] = useState(\"\");\r\n\r\n    const [billTotalCost, setBillTotalCost] = useState(\"\");\r\n\r\n    const { user, setUserBill } = useContext(Context);\r\n\r\n    const location = useLocation();\r\n    const scannedFileData = location.state;\r\n    useEffect(() => {\r\n        setRetailer(scannedFileData.providerName);\r\n        setStartDate(scannedFileData.startDate);\r\n        setEndDate(scannedFileData.endDate);\r\n        setDailySupplyCharge(scannedFileData.dailySupplyCharge);\r\n        setDailySupplyUsage(scannedFileData.dailySupplyUsage);\r\n        setPeakUsage(scannedFileData.peakUsage);\r\n        setPeakCharge(scannedFileData.peakCharge);\r\n\r\n        setOffPeakCharge(scannedFileData.offPeakCharge);\r\n        setOffPeakUsage(scannedFileData.offPeakUsage);\r\n        setShoulderCharge(scannedFileData.shoulderCharge);\r\n        setShoulderUsage(scannedFileData.shoulderUsage);\r\n        setControlledLoadCharge(scannedFileData.controlledLoadCharge);\r\n        setControlledLoadUsage(scannedFileData.controlledLoadUsage);\r\n\r\n        setBillTotalCost(scannedFileData.billTotalCost);\r\n        setPostCode(scannedFileData.postcode);\r\n    }, []);\r\n\r\n    const handleRetailerChange = (event) => {\r\n        const regex = /^[a-zA-Z\\s\\W]+$/;\r\n        if (regex.test(event.target.value) || event.target.value === \"\") {\r\n            setRetailer(event.target.value);\r\n        } else {\r\n            alert(\"Error Please enter the Alphabet\");\r\n        }\r\n    };\r\n\r\n    const handlePostcodeChange = (event) => {\r\n        const re = /^[0-9\\b]+$/;\r\n        if (event.target.value === \"\" || re.test(event.target.value)) {\r\n            setPostCode(event.target.value);\r\n        } else {\r\n            alert(\"Error Please enter the Number\");\r\n        }\r\n    };\r\n\r\n    const handleStartDateChange = (event) => {\r\n        const regex = /^[0-9\\W]*$/;\r\n        if (regex.test(event.target.value)) {\r\n            setStartDate(event.target.value);\r\n        } else {\r\n            alert(\"Error Please enter the Number\");\r\n        }\r\n    };\r\n\r\n    const handleEndDateChange = (event) => {\r\n        const regex = /^[0-9\\W]*$/;\r\n        if (regex.test(event.target.value)) {\r\n            setEndDate(event.target.value);\r\n        } else {\r\n            alert(\"Error Please enter the Number\");\r\n        }\r\n    };\r\n\r\n    const handleBillTotalCostChange = (event) => {\r\n        const regex = /^[0-9\\W]*$/;\r\n        if (regex.test(event.target.value)) {\r\n            if (event.target.value.split(\".\").length <= 2) {\r\n                setBillTotalCost(event.target.value);\r\n            }\r\n        } else {\r\n            alert(\"Error Please enter the Number\");\r\n        }\r\n    };\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const handleCancelClick = (event) => {\r\n        navigate(\"/bill-results\", { state: scannedFileData });\r\n    };\r\n\r\n    const handleSaveClick = (event) => {\r\n        const updatedScanValues = {\r\n            providerName: retailer,\r\n            fileName: scannedFileData.fileName,\r\n            postcode: postcode,\r\n            providerAbn: scannedFileData.providerAbn,\r\n            startDate: startDate,\r\n            endDate: endDate,\r\n            dailySupplyCharge: dailySupplyCharge,\r\n            dailySupplyUsage: dailySupplyUsage,\r\n            peakUsage: peakUsage,\r\n            peakCharge: peakCharge,\r\n            offPeakCharge: offPeakCharge,\r\n            offPeakUsage: offPeakUsage,\r\n            shoulderCharge: shoulderCharge,\r\n            shoulderUsage: shoulderUsage,\r\n            controlledLoadCharge: controlledLoadCharge,\r\n            controlledLoadUsage: controlledLoadUsage,\r\n            billTotalCost: billTotalCost,\r\n        };\r\n        // if logged in user, save data to Db\r\n        if (user) {\r\n            axios\r\n                .post(\"http://localhost:8080/insertData\", {\r\n                    scannedFileData: updatedScanValues,\r\n                    userId: user.id,\r\n                })\r\n                .catch((err) => {\r\n                    alert(\"Data could not be entered, Try again!\");\r\n                });\r\n        }\r\n        // if guest user, save data to localStorage\r\n        else {\r\n            setUserBill(updatedScanValues);\r\n        }\r\n        navigate(\"/upload-retailer\", { state: updatedScanValues });\r\n    };\r\n\r\n    return (\r\n        <PageLayout>\r\n            <Typography\r\n                fontSize={{ xs: \"4rem\", sm: \"5rem\" }}\r\n                fontWeight=\"bold\"\r\n                color=\"secondary\"\r\n                align=\"center\"\r\n                my={1}\r\n            >\r\n                EDIT RESULTS\r\n            </Typography>\r\n            <Typography\r\n                fontSize={{ xs: \"1rem\", sm: \"1.5rem\" }}\r\n                fontWeight=\"medium\"\r\n                color=\"secondary\"\r\n                align=\"center\"\r\n                my={1}\r\n            >\r\n                Click 'SAVE' after you have finished editing.\r\n                <br />\r\n                Or, click 'CANCEL' to discard changes.\r\n            </Typography>\r\n            <br />\r\n            <Grid\r\n                container\r\n                spacing={2}\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                sx={{\r\n                    display: \"flex\",\r\n                    align: \"center\",\r\n                }}\r\n            >\r\n                <Grid\r\n                    item\r\n                    xs={12}\r\n                    sm={12}\r\n                    md={6}\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                >\r\n                    <Typography fontWeight=\"bold\" color=\"secondary\" pt={2}>\r\n                        RETAILER\r\n                    </Typography>\r\n                    <Textfield\r\n                        type=\"outlined\"\r\n                        value={retailer}\r\n                        onChange={handleRetailerChange}\r\n                    ></Textfield>\r\n                    <Typography fontWeight=\"bold\" color=\"secondary\" pt={2}>\r\n                        START DATE\r\n                    </Typography>\r\n                    <Textfield\r\n                        type=\"outlined\"\r\n                        value={startDate}\r\n                        onChange={handleStartDateChange}\r\n                    />\r\n                    <Typography fontWeight=\"bold\" color=\"secondary\" pt={2}>\r\n                        DAILY SUPPLY USAGE\r\n                    </Typography>\r\n                    <Textfield\r\n                        type=\"outlined\"\r\n                        value={dailySupplyUsage}\r\n                        onChange={(e) => setDailySupplyUsage(e.target.value)}\r\n                    ></Textfield>\r\n                    <Typography fontWeight=\"bold\" color=\"secondary\" pt={2}>\r\n                        PEAK USAGE\r\n                    </Typography>\r\n                    <Textfield\r\n                        type=\"outlined\"\r\n                        value={peakUsage}\r\n                        onChange={(e) => setPeakUsage(e.target.value)}\r\n                    />\r\n                    <Typography fontWeight=\"bold\" color=\"secondary\" pt={2}>\r\n                        OFF PEAK USAGE\r\n                    </Typography>\r\n                    <Textfield\r\n                        type=\"outlined\"\r\n                        value={offPeakUsage}\r\n                        onChange={(e) => setOffPeakUsage(e.target.value)}\r\n                    />\r\n                    <Typography fontWeight=\"bold\" color=\"secondary\" pt={2}>\r\n                        SHOULDER USAGE\r\n                    </Typography>\r\n                    <Textfield\r\n                        type=\"outlined\"\r\n                        value={shoulderUsage}\r\n                        onChange={(e) => setShoulderUsage(e.target.value)}\r\n                    />\r\n                    <Typography fontWeight=\"bold\" color=\"secondary\" pt={2}>\r\n                        CONTROLLED LOAD USAGE\r\n                    </Typography>\r\n                    <Textfield\r\n                        type=\"outlined\"\r\n                        value={controlledLoadUsage}\r\n                        onChange={(e) => setControlledLoadUsage(e.target.value)}\r\n                    />\r\n                </Grid>\r\n\r\n                <Grid\r\n                    item\r\n                    sx={12}\r\n                    sm={12}\r\n                    md={6}\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                >\r\n                    <Typography fontWeight=\"bold\" color=\"secondary\" pt={2}>\r\n                        POSTCODE\r\n                    </Typography>\r\n                    <Textfield\r\n                        type=\"outlined\"\r\n                        value={postcode}\r\n                        onChange={handlePostcodeChange}\r\n                    />\r\n                    <Typography fontWeight=\"bold\" color=\"secondary\" pt={2}>\r\n                        END DATE\r\n                    </Typography>\r\n                    <Textfield\r\n                        type=\"outlined\"\r\n                        value={endDate}\r\n                        onChange={handleEndDateChange}\r\n                    />\r\n                    <Typography fontWeight=\"bold\" color=\"secondary\" pt={2}>\r\n                        DAILY SUPPLY CHARGE\r\n                    </Typography>\r\n                    <Textfield\r\n                        type=\"outlined\"\r\n                        value={dailySupplyCharge}\r\n                        onChange={(e) => setDailySupplyCharge(e.target.value)}\r\n                    />\r\n                    <Typography fontWeight=\"bold\" color=\"secondary\" pt={2}>\r\n                        PEAK CHARGE\r\n                    </Typography>\r\n                    <Textfield\r\n                        type=\"outlined\"\r\n                        value={peakCharge}\r\n                        onChange={(e) => setPeakCharge(e.target.value)}\r\n                    />\r\n                    <Typography fontWeight=\"bold\" color=\"secondary\" pt={2}>\r\n                        OFF PEAK CHARGE\r\n                    </Typography>\r\n                    <Textfield\r\n                        type=\"outlined\"\r\n                        value={offPeakCharge}\r\n                        onChange={(e) => setOffPeakCharge(e.target.value)}\r\n                    />\r\n                    <Typography fontWeight=\"bold\" color=\"secondary\" pt={2}>\r\n                        SHOULDER CHARGE\r\n                    </Typography>\r\n                    <Textfield\r\n                        type=\"outlined\"\r\n                        value={shoulderCharge}\r\n                        onChange={(e) => setShoulderCharge(e.target.value)}\r\n                    />\r\n                    <Typography fontWeight=\"bold\" color=\"secondary\" pt={2}>\r\n                        CONTROLLED LOAD CHARGE\r\n                    </Typography>\r\n                    <Textfield\r\n                        type=\"outlined\"\r\n                        value={controlledLoadCharge}\r\n                        onChange={(e) =>\r\n                            setControlledLoadCharge(e.target.value)\r\n                        }\r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            <Grid\r\n                container\r\n                spacing={2}\r\n                justify=\"center\"\r\n                alignItems=\"center\"\r\n                sx={{\r\n                    display: \"flex\",\r\n                    align: \"center\",\r\n                }}\r\n            >\r\n                <Grid item xs={12} md={6}>\r\n                    <Grid>\r\n                        <Typography fontWeight=\"bold\" color=\"secondary\" pt={2}>\r\n                            TOTAL PAID\r\n                        </Typography>\r\n                        <Textfield\r\n                            type=\"outlined\"\r\n                            value={billTotalCost}\r\n                            onChange={handleBillTotalCostChange}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n            </Grid>\r\n            <Stack\r\n                spacing={9}\r\n                direction=\"row\"\r\n                sx={{\r\n                    marginY: \"3rem\",\r\n                    display: \"flex\",\r\n                    justifyContent: \"center\",\r\n                }}\r\n            >\r\n                <Button type=\"contained\" onClick={handleCancelClick}>\r\n                    Cancel\r\n                </Button>\r\n                <Button type=\"contained\" onClick={handleSaveClick}>\r\n                    Save\r\n                </Button>\r\n            </Stack>\r\n        </PageLayout>\r\n    );\r\n}\r\n\r\nexport default EditBillResults;\r\n","import { useState, useContext } from \"react\";\r\nimport React from \"react\";\r\nimport { useNavigate, Link } from \"react-router-dom\";\r\n\r\nimport axios from \"axios\";\r\nimport {\r\n    Grid,\r\n    Box,\r\n    IconButton,\r\n    Typography,\r\n    styled,\r\n    CircularProgress,\r\n    Divider,\r\n} from \"@mui/material\";\r\nimport UploadIcon from \"@mui/icons-material/Upload\";\r\nimport CloseIcon from \"@mui/icons-material/Close\";\r\nimport Button from \"../Button\";\r\nimport { Context } from \"../Context\";\r\n\r\nconst Input = styled(\"input\")`\r\n    display: none;\r\n`;\r\n\r\nfunction UploadRetailer() {\r\n    const [file, setFile] = useState(null);\r\n    const [blobFileURL, setblobFileURL] = useState({});\r\n    const [isLoading, setIsLoading] = useState(false);\r\n    const [scannedRetailerPlanData, setScannedRetailerPlanData] = useState({});\r\n    const { user, userBill } = useContext(Context);\r\n\r\n    const handleCloseButtonClick = () => {\r\n        setFile(null);\r\n    };\r\n\r\n    const handleFileChange = (e) => {\r\n        e.preventDefault();\r\n        if (e.target.files !== null) {\r\n            const file = e.target.files[0];\r\n            setFile(file.name);\r\n            const data = new FormData();\r\n            const filename = Date.now() + file.name;\r\n            data.append(\"name\", filename);\r\n            data.append(\"file\", file);\r\n\r\n            axios.post(\"http://localhost:8080/upload\", data).then((res) => {\r\n                setblobFileURL(res.data.publicURL);\r\n            });\r\n        }\r\n    };\r\n\r\n    const handleScanFile = async (event) => {\r\n        event.preventDefault();\r\n        if (file == null) {\r\n            alert(\"Error! Please upload a file before scanning the bill.\");\r\n        } else {\r\n            setIsLoading(true);\r\n            axios\r\n                .post(\"http://localhost:8080/scanRetailerPlan\", {\r\n                    blobFileURL,\r\n                })\r\n                .then((res) => {\r\n                    setScannedRetailerPlanData(\r\n                        res.data.scannedRetailerPlanData\r\n                    );\r\n                    setIsLoading(false);\r\n                });\r\n        }\r\n    };\r\n\r\n    const navigate = useNavigate();\r\n\r\n    const handleViewResults = () => {\r\n        navigate(\"/retailer-results\", { state: scannedRetailerPlanData });\r\n    };\r\n\r\n    const handleCompareClick = (event) => {\r\n        event.preventDefault();\r\n        // guest user will be taken to comparison page directly\r\n        if (userBill) {\r\n            axios\r\n                .post(\"http://localhost:8080/compare\", { userBill })\r\n                .then((res) => {\r\n                    let userDetail = res.data.userDetail;\r\n                    let top5Plans = res.data.top5Plans;\r\n                    navigate(\"/comparison\", {\r\n                        state: { userDetail, top5Plans },\r\n                    });\r\n                });\r\n        }\r\n        // logged in user will be taken to select bill page\r\n        else if (user) {\r\n            window.location = \"/select-bill\";\r\n        } else {\r\n            alert(\r\n                \"Error! No bills were selected for comparison. Please upload a user bill first.\"\r\n            );\r\n            navigate(\"/\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <Grid container justifyContent=\"center\" alignItems=\"center\" gap={5}>\r\n            <Grid item xl={6} lg={6} md={8} sm={8} xs={10}>\r\n                <label>\r\n                    <Input\r\n                        accept=\"image,pdf/*\"\r\n                        id=\"file\"\r\n                        name=\"file\"\r\n                        type=\"file\"\r\n                        onChange={handleFileChange}\r\n                    />\r\n                    <Box\r\n                        sx={{\r\n                            backgroundColor: \"primary.dark\",\r\n                            display: \"flex\",\r\n                            flexDirection: \"column\",\r\n                            justifyContent: \"center\",\r\n                            alignItems: \"center\",\r\n                            outline: \"2px dashed #16434F\",\r\n                            borderRadius: 5,\r\n                            gap: 2,\r\n                            py: 2,\r\n                            px: 10,\r\n                            \"&:hover\": { cursor: \"pointer\" },\r\n                        }}\r\n                    >\r\n                        <UploadIcon\r\n                            fontSize=\"large\"\r\n                            color=\"secondary\"\r\n                            sx={{ fontSize: 100, opacity: 0.6 }}\r\n                        />\r\n                        <Typography color=\"secondary\">\r\n                            Click anywhere to upload\r\n                        </Typography>\r\n                        <Typography\r\n                            color=\"secondary\"\r\n                            fontSize={16}\r\n                            sx={{ fontStyle: \"italic\", opacity: 0.5 }}\r\n                        >\r\n                            Max. file size 25 MB\r\n                        </Typography>\r\n                    </Box>\r\n                </label>\r\n            </Grid>\r\n            <Grid item xl={6} lg={6} md={8} sm={8} xs={10}>\r\n                {file && (\r\n                    <Box\r\n                        sx={{\r\n                            backgroundColor: \"primary.dark\",\r\n                            display: \"flex\",\r\n                            flexDirection: \"row\",\r\n                            justifyContent: \"space-between\",\r\n                            alignItems: \"center\",\r\n                            outline: \"1px solid grey\",\r\n                            borderRadius: 3,\r\n                            px: 1,\r\n                            py: 1,\r\n                        }}\r\n                    >\r\n                        <Box>{file}</Box>\r\n                        <IconButton onClick={handleCloseButtonClick}>\r\n                            <CloseIcon color=\"secondary\" />\r\n                        </IconButton>\r\n                    </Box>\r\n                )}\r\n            </Grid>\r\n            <Grid\r\n                item\r\n                xl={6}\r\n                lg={6}\r\n                md={8}\r\n                sm={8}\r\n                xs={10}\r\n                display=\"flex\"\r\n                flexDirection=\"column\"\r\n                justifyContent=\"center\"\r\n                alignItems=\"center\"\r\n                gap={2}\r\n            >\r\n                {Object.keys(scannedRetailerPlanData).length === 0 &&\r\n                    isLoading === false && (\r\n                        <>\r\n                            <Button type=\"contained\" onClick={handleScanFile}>\r\n                                Scan Plan\r\n                            </Button>\r\n                            <Divider style={{ color: \"secondary.main\" }}>\r\n                                OR\r\n                            </Divider>\r\n                            <Link\r\n                                to=\"/comparison\"\r\n                                style={{ textDecoration: \"none\" }}\r\n                            >\r\n                                <Button\r\n                                    type=\"contained\"\r\n                                    onClick={handleCompareClick}\r\n                                >\r\n                                    Compare Plans\r\n                                </Button>\r\n                            </Link>\r\n                        </>\r\n                    )}\r\n                {Object.keys(scannedRetailerPlanData).length !== 0 &&\r\n                    isLoading === false && (\r\n                        <Button type=\"contained\" onClick={handleViewResults}>\r\n                            View Results\r\n                        </Button>\r\n                    )}\r\n                {isLoading === true && <CircularProgress color=\"secondary\" />}\r\n            </Grid>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nexport default UploadRetailer;\r\n","import { Box, Typography } from \"@mui/material\";\r\nimport UploadRetailer from \"../../components/UploadRetailer\";\r\nimport PageLayout from \"../../components/PageLayout\";\r\nimport React from \"react\";\r\n\r\nconst UploadRetailerPage = () => {\r\n    return (\r\n        <PageLayout>\r\n            <Box\r\n                sx={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                }}\r\n            >\r\n                <Typography\r\n                    fontSize={{ xs: \"4rem\", sm: \"5rem\" }}\r\n                    fontWeight=\"bold\"\r\n                    color=\"secondary\"\r\n                    my={3}\r\n                >\r\n                    Scan Retailer Plan\r\n                </Typography>\r\n                <Typography\r\n                    fontSize={{ xs: \"1.5rem\", sm: \"2rem\" }}\r\n                    color=\"secondary\"\r\n                    mb={3}\r\n                >\r\n                    Upload a plan to start!\r\n                </Typography>\r\n                <UploadRetailer />\r\n            </Box>\r\n        </PageLayout>\r\n    );\r\n};\r\n\r\nexport default UploadRetailerPage;\r\n","import { useContext } from \"react\";\r\nimport Button from \"../../components/Button\";\r\nimport Textfield from \"../../components/TextField\";\r\nimport PageLayout from \"../../components/PageLayout\";\r\nimport { Context } from \"../../components/Context\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport { Grid, Typography, Box, Stack } from \"@mui/material\";\r\nimport axios from \"axios\";\r\nimport React from \"react\";\r\n\r\nfunction RetailerResults(props) {\r\n    const { user, userBill } = useContext(Context);\r\n    const location = useLocation();\r\n    const scannedRetailerPlanData = location.state;\r\n    const navigate = useNavigate();\r\n\r\n    const handleEditClick = (event) => {\r\n        navigate(\"/edit-retailer-results\", { state: scannedRetailerPlanData });\r\n    };\r\n\r\n    const handleContClick = (event) => {\r\n        axios\r\n            .post(\r\n                \"http://localhost:8080/insertRetailerData\",\r\n                scannedRetailerPlanData\r\n            )\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n        // guest user will be taken comparison page directly\r\n        if (userBill) {\r\n            axios\r\n                .post(\"http://localhost:8080/compare\", { userBill })\r\n                .then((res) => {\r\n                    let userDetail = res.data.userDetail;\r\n                    let top5Plans = res.data.top5Plans;\r\n                    navigate(\"/comparison\", {\r\n                        state: { userDetail, top5Plans },\r\n                    });\r\n                });\r\n        }\r\n        // logged in user will be taken to select bill page\r\n        else if (user) {\r\n            window.location = \"/select-bill\";\r\n        } else {\r\n            alert(\r\n                \"Error! No bills were selected for comparison. Please upload a bill first.\"\r\n            );\r\n            navigate(\"/\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <PageLayout>\r\n            <Box\r\n                sx={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                }}\r\n            >\r\n                <Typography\r\n                    fontSize={{ xs: \"4rem\", sm: \"5rem\" }}\r\n                    fontWeight=\"bold\"\r\n                    color=\"secondary\"\r\n                    my={5}\r\n                >\r\n                    RESULTS\r\n                </Typography>\r\n                <Typography\r\n                    fontSize={{ xs: \"1.25rem\", sm: \"1.5rem\" }}\r\n                    color=\"secondary\"\r\n                    mb={3}\r\n                >\r\n                    Your plan has been scanned successfully.\r\n                    <br />\r\n                    Please ensure that all information is correct.\r\n                </Typography>\r\n                <Grid container>\r\n                    <Grid item xs={12} md={6}>\r\n                        <Typography fontWeight=\"bold\" color=\"secondary\" pt={2}>\r\n                            PROVIDER\r\n                        </Typography>\r\n                        <Textfield\r\n                            type=\"disabled\"\r\n                            value={scannedRetailerPlanData.provider}\r\n                        ></Textfield>\r\n                        <Typography fontWeight=\"bold\" color=\"secondary\" pt={2}>\r\n                            PLAN ID\r\n                        </Typography>\r\n                        <Textfield\r\n                            type=\"disabled\"\r\n                            value={scannedRetailerPlanData.id}\r\n                        />\r\n                        <Typography fontWeight=\"bold\" color=\"secondary\" pt={2}>\r\n                            DAILY SUPPLY CHARGE\r\n                        </Typography>\r\n                        <Textfield\r\n                            type=\"disabled\"\r\n                            value={scannedRetailerPlanData.dailySupplyCharge}\r\n                        />\r\n                        <Typography fontWeight=\"bold\" color=\"secondary\" pt={2}>\r\n                            SHOULDER CHARGE\r\n                        </Typography>\r\n                        <Textfield\r\n                            type=\"disabled\"\r\n                            value={scannedRetailerPlanData.shoulderCharge}\r\n                        />\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} md={6}>\r\n                        <Typography fontWeight=\"bold\" color=\"secondary\" pt={2}>\r\n                            DISTRIBUTOR\r\n                        </Typography>\r\n                        <Textfield\r\n                            type=\"disabled\"\r\n                            value={scannedRetailerPlanData.distributor}\r\n                        />\r\n                        <Typography pt={2} fontWeight=\"bold\" color=\"secondary\">\r\n                            BILL FREQUENCY\r\n                        </Typography>\r\n                        <Textfield\r\n                            type=\"disabled\"\r\n                            value={scannedRetailerPlanData.billFrequency}\r\n                        />\r\n                        <Typography pt={2} fontWeight=\"bold\" color=\"secondary\">\r\n                            PEAK CHARGE\r\n                        </Typography>\r\n                        <Textfield\r\n                            type=\"disabled\"\r\n                            value={scannedRetailerPlanData.peakCharge}\r\n                        />\r\n                        <Typography pt={2} fontWeight=\"bold\" color=\"secondary\">\r\n                            OFF PEAK CHARGE\r\n                        </Typography>\r\n                        <Textfield\r\n                            type=\"disabled\"\r\n                            value={scannedRetailerPlanData.offPeakCharge}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid\r\n                    container\r\n                    spacing={2}\r\n                    justify=\"center\"\r\n                    alignItems=\"center\"\r\n                    sx={{\r\n                        display: \"flex\",\r\n                        align: \"center\",\r\n                    }}\r\n                >\r\n                    <Grid item xs={12} md={6}>\r\n                        <Grid>\r\n                            <Typography\r\n                                fontWeight=\"bold\"\r\n                                color=\"secondary\"\r\n                                pt={2}\r\n                            >\r\n                                CONTROLLED LOAD CHARGE\r\n                            </Typography>\r\n                            <Textfield\r\n                                type=\"disabled\"\r\n                                value={\r\n                                    scannedRetailerPlanData.controlledLoadCharge\r\n                                }\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Stack spacing={9} direction=\"row\" paddingY={5}>\r\n                    <Button type=\"contained\" onClick={handleEditClick}>\r\n                        Edit\r\n                    </Button>\r\n                    <Button type=\"contained\" onClick={handleContClick}>\r\n                        Continue\r\n                    </Button>\r\n                </Stack>\r\n            </Box>\r\n        </PageLayout>\r\n    );\r\n}\r\n\r\nexport default RetailerResults;\r\n","import { useState, useEffect, useContext } from \"react\";\r\nimport { useNavigate, useLocation } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { Typography, Stack } from \"@mui/material\";\r\nimport { Box, Grid } from \"@mui/material\";\r\nimport PageLayout from \"../../components/PageLayout\";\r\nimport Textfield from \"../../components/TextField\";\r\nimport Button from \"../../components/Button\";\r\nimport { Context } from \"../../components/Context\";\r\nimport React from \"react\";\r\n\r\nfunction EditRetailerResults() {\r\n    const { user, userBill } = useContext(Context);\r\n    const [provider, setProvider] = useState(\"\");\r\n    const [planId, setPlanId] = useState(\"\");\r\n    // offer rates\r\n    const [peakCharge, setPeakCharge] = useState(\"\");\r\n    const [dailySupplyCharge, setDailySupplyCharge] = useState(\"\");\r\n    const [offPeakCharge, setOffPeakCharge] = useState(\"\");\r\n    const [shoulderCharge, setShoulderCharge] = useState(\"\");\r\n    const [controlledLoadCharge, setControlledLoadCharge] = useState(\"\");\r\n    // contract details\r\n    const [contractDetails, setContractDetails] = useState(\"\");\r\n    const [contractDetailsString, setContractDetailsString] = useState(\"\");\r\n    // fees\r\n    const [distributor, setDistributor] = useState(\"\");\r\n\r\n    // features - may differ\r\n    const [billFrequency, setBillFrequency] = useState(\"\");\r\n\r\n    /*examples: directDebit, greenPower, paperBills, fixedPrice*/\r\n\r\n    const location = useLocation();\r\n    const scannedRetailerPlanData = location.state;\r\n    useEffect(() => {\r\n        setProvider(scannedRetailerPlanData.provider);\r\n        setPlanId(scannedRetailerPlanData.id);\r\n        setPeakCharge(scannedRetailerPlanData.peakCharge);\r\n        setDailySupplyCharge(scannedRetailerPlanData.dailySupplyCharge);\r\n        setOffPeakCharge(scannedRetailerPlanData.offPeakCharge);\r\n        setShoulderCharge(scannedRetailerPlanData.shoulderCharge);\r\n        setControlledLoadCharge(scannedRetailerPlanData.controlledLoadCharge);\r\n        setContractDetails(scannedRetailerPlanData.contractDetails);\r\n        setDistributor(scannedRetailerPlanData.distributor);\r\n        setBillFrequency(scannedRetailerPlanData.billFrequency);\r\n    }, []);\r\n\r\n    const handleProviderChange = (event) => {\r\n        // setProvider(event.target.value);\r\n        const regex = /^[a-zA-Z\\s\\W]+$/;\r\n        if (regex.test(event.target.value) || event.target.value === \"\") {\r\n            setProvider(event.target.value);\r\n        } else {\r\n            alert(\"Error Please enter the Alphabet\");\r\n        }\r\n    };\r\n    const handlePlanIdChange = (event) => {\r\n        setPlanId(event.target.value.toUpperCase());\r\n    };\r\n    const handlePeakChange = (event) => {\r\n        // setPeakConsumptionRate(event.target.value);\r\n        const regex = /^[0-9\\W]*$/;\r\n        if (regex.test(event.target.value)) {\r\n            setPeakCharge(event.target.value);\r\n        } else {\r\n            alert(\"Error Please enter the Number\");\r\n        }\r\n    };\r\n    const handleDailySupplyChargeChange = (event) => {\r\n        // setDailySupplyCharge(event.target.value);\r\n        const regex = /^[0-9\\W]*$/;\r\n        if (regex.test(event.target.value)) {\r\n            setDailySupplyCharge(event.target.value);\r\n        } else {\r\n            alert(\"Error Please enter the Number\");\r\n        }\r\n    };\r\n\r\n    const handleDistributorChange = (event) => {\r\n        // setDistributor(event.target.value);\r\n        const regex = /^[a-zA-Z\\s\\W]+$/;\r\n        if (regex.test(event.target.value) || event.target.value === \"\") {\r\n            setDistributor(event.target.value);\r\n        } else {\r\n            alert(\"Error Please enter the Alphabet\");\r\n        }\r\n    };\r\n    const handleBillFrequencyChange = (event) => {\r\n        setBillFrequency(event.target.value);\r\n    };\r\n\r\n    const handlePeakChargeChange = (event) => {\r\n        setPeakCharge(event.target.value);\r\n    };\r\n\r\n    const handleOffPeakChargeChange = (event) => {\r\n        setOffPeakCharge(event.target.value);\r\n    };\r\n    const handleShoulderChargeChange = (event) => {\r\n        setShoulderCharge(event.target.value);\r\n    };\r\n    const handleControlledLoadChargeChange = (event) => {\r\n        setControlledLoadCharge(event.target.value);\r\n    };\r\n    const handleContractDetailsChange = (event) => {\r\n        setContractDetailsString(event.target.value);\r\n    };\r\n    const navigate = useNavigate();\r\n\r\n    const handleCancelClick = (event) => {\r\n        navigate(\"/retailer-results\", { state: scannedRetailerPlanData });\r\n    };\r\n\r\n    const handleSaveClick = (event) => {\r\n        scannedRetailerPlanData.id = planId;\r\n        scannedRetailerPlanData.provider = provider;\r\n        scannedRetailerPlanData.peakCharge = peakCharge;\r\n        scannedRetailerPlanData.dailySupplyCharge = dailySupplyCharge;\r\n        scannedRetailerPlanData.offPeakCharge = offPeakCharge;\r\n        scannedRetailerPlanData.shoulderCharge = shoulderCharge;\r\n        scannedRetailerPlanData.controlledLoadCharge = controlledLoadCharge;\r\n        scannedRetailerPlanData.distributor = distributor;\r\n        scannedRetailerPlanData.billFrequency = billFrequency;\r\n\r\n        axios\r\n            .post(\r\n                \"http://localhost:8080/insertRetailerData\",\r\n                scannedRetailerPlanData\r\n            )\r\n            .catch((err) => {\r\n                alert(err);\r\n            });\r\n        // guest user will be taken to comparison page directly\r\n        if (userBill) {\r\n            axios\r\n                .post(\"http://localhost:8080/compare\", { userBill })\r\n                .then((res) => {\r\n                    let userDetail = res.data.userDetail;\r\n                    let top5Plans = res.data.top5Plans;\r\n                    navigate(\"/comparison\", {\r\n                        state: { userDetail, top5Plans },\r\n                    });\r\n                });\r\n        }\r\n        // logged in user will be taken to select bill page\r\n        else if (user) {\r\n            window.location = \"/select-bill\";\r\n        } else {\r\n            alert(\r\n                \"Error! No bills were selected for comparison. Please upload a bill first.\"\r\n            );\r\n            navigate(\"/\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <PageLayout>\r\n            <Box\r\n                sx={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                }}\r\n            >\r\n                <Typography\r\n                    fontSize={{ xs: \"4rem\", sm: \"5rem\" }}\r\n                    fontWeight=\"bold\"\r\n                    color=\"secondary\"\r\n                    my={5}\r\n                >\r\n                    EDIT RESULTS\r\n                </Typography>\r\n                <Typography\r\n                    fontSize={{ xs: \"1.25rem\", sm: \"1.5rem\" }}\r\n                    color=\"secondary\"\r\n                    mb={3}\r\n                >\r\n                    Click 'SAVE' after you have finished editing.\r\n                    <br />\r\n                    Or, click 'CANCEL' to discard changes.\r\n                </Typography>\r\n                <Grid container>\r\n                    <Grid item xs={12} md={6}>\r\n                        <Typography fontWeight=\"bold\" color=\"secondary\" pt={2}>\r\n                            PROVIDER\r\n                        </Typography>\r\n                        <Textfield\r\n                            type=\"outlined\"\r\n                            value={provider}\r\n                            onChange={handleProviderChange}\r\n                        ></Textfield>\r\n                        <Typography fontWeight=\"bold\" color=\"secondary\" pt={2}>\r\n                            PLAN ID\r\n                        </Typography>\r\n                        <Textfield\r\n                            type=\"outlined\"\r\n                            value={planId}\r\n                            onChange={handlePlanIdChange}\r\n                        />\r\n\r\n                        <Typography fontWeight=\"bold\" color=\"secondary\" pt={2}>\r\n                            DISTRIBUTOR\r\n                        </Typography>\r\n                        <Textfield\r\n                            type=\"outlined\"\r\n                            value={distributor}\r\n                            onChange={handleDistributorChange}\r\n                        ></Textfield>\r\n                        <Typography fontWeight=\"bold\" color=\"secondary\" pt={2}>\r\n                            OFF PEAK CHARGE\r\n                        </Typography>\r\n                        <Textfield\r\n                            type=\"outlined\"\r\n                            value={offPeakCharge}\r\n                            onChange={handleOffPeakChargeChange}\r\n                        ></Textfield>\r\n                        <Typography fontWeight=\"bold\" color=\"secondary\" pt={2}>\r\n                            SHOULDER CHARGE\r\n                        </Typography>\r\n                        <Textfield\r\n                            type=\"outlined\"\r\n                            value={shoulderCharge}\r\n                            onChange={handleShoulderChargeChange}\r\n                        ></Textfield>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={6}>\r\n                        <Typography fontWeight=\"bold\" color=\"secondary\" pt={2}>\r\n                            PEAK CHARGE\r\n                        </Typography>\r\n                        <Textfield\r\n                            type=\"outlined\"\r\n                            value={peakCharge}\r\n                            onChange={handlePeakChange}\r\n                        />\r\n                        <Typography pt={2} fontWeight=\"bold\" color=\"secondary\">\r\n                            DAILY SUPPLY CHARGE ($)\r\n                        </Typography>\r\n                        <Textfield\r\n                            type=\"outlined\"\r\n                            value={dailySupplyCharge}\r\n                            onChange={handleDailySupplyChargeChange}\r\n                        />\r\n                        <Typography fontWeight=\"bold\" color=\"secondary\" pt={2}>\r\n                            CONTROLLED LOAD CHARGE\r\n                        </Typography>\r\n                        <Textfield\r\n                            type=\"outlined\"\r\n                            value={controlledLoadCharge}\r\n                            onChange={handleControlledLoadChargeChange}\r\n                        ></Textfield>\r\n                        <Typography fontWeight=\"bold\" color=\"secondary\" pt={2}>\r\n                            CONTRACT DETAIL\r\n                        </Typography>\r\n                        <Textfield\r\n                            type=\"outlined\"\r\n                            value={contractDetails}\r\n                            onChange={handleContractDetailsChange}\r\n                        ></Textfield>\r\n                        <Typography pt={2} fontWeight=\"bold\" color=\"secondary\">\r\n                            BILL FREQUENCY\r\n                        </Typography>\r\n                        <Textfield\r\n                            type=\"outlined\"\r\n                            value={billFrequency}\r\n                            onChange={handleBillFrequencyChange}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Stack spacing={9} direction=\"row\" paddingY={5}>\r\n                    <Button type=\"contained\" onClick={handleCancelClick}>\r\n                        Cancel\r\n                    </Button>\r\n                    <Button type=\"contained\" onClick={handleSaveClick}>\r\n                        Save\r\n                    </Button>\r\n                </Stack>\r\n            </Box>\r\n        </PageLayout>\r\n    );\r\n}\r\n\r\nexport default EditRetailerResults;\r\n","import { useState, useEffect, useContext } from \"react\";\r\nimport PageLayout from \"../../components/PageLayout\";\r\nimport Button from \"../../components/Button\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Box, Typography, Select, FormControl, MenuItem } from \"@mui/material\";\r\nimport axios from \"axios\";\r\nimport { Context } from \"../../components/Context\";\r\nimport React from \"react\";\r\n\r\nfunction SelectBill(props) {\r\n    const navigate = useNavigate();\r\n    const [selectedBill, setSelectedBill] = useState(\"\");\r\n    const [bills, setBills] = useState([]);\r\n    const { user } = useContext(Context);\r\n\r\n    const handleChange = (event) => {\r\n        setSelectedBill(event.target.value);\r\n    };\r\n\r\n    useEffect(() => {\r\n        // page only accessible to logged in users\r\n        if (!user) navigate(\"/\");\r\n        axios\r\n            .get(\"http://localhost:8080/userBills\", {\r\n                params: { userId: user.id },\r\n            })\r\n            .then((res) => {\r\n                setBills(res.data.userFiles);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err);\r\n            });\r\n    }, []);\r\n\r\n    const handleCompareClick = (event) => {\r\n        if (selectedBill === \"\") {\r\n            event.preventDefault();\r\n            alert(\r\n                \"Error! No bills were selected for comparison. Please select a bill first.\"\r\n            );\r\n        } else {\r\n            axios\r\n                .post(\"http://localhost:8080/compare\", { selectedBill })\r\n                .then((res) => {\r\n                    let userDetail = res.data.userDetail;\r\n                    let top5Plans = res.data.top5Plans;\r\n                    navigate(\"/comparison\", {\r\n                        state: { userDetail, top5Plans },\r\n                    });\r\n                });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <PageLayout>\r\n            <Box\r\n                sx={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    paddingtop: 10,\r\n                }}\r\n            >\r\n                <Typography\r\n                    fontSize={{ xs: \"4rem\", sm: \"5rem\" }}\r\n                    fontWeight=\"bold\"\r\n                    color=\"secondary\"\r\n                    my={5}\r\n                >\r\n                    YOUR BILLS\r\n                </Typography>\r\n                <Typography\r\n                    fontSize={{ xs: \"1.25rem\", sm: \"1.5rem\" }}\r\n                    color=\"secondary\"\r\n                    mb={3}\r\n                >\r\n                    Select a bill to compare.\r\n                </Typography>\r\n                <Box\r\n                    sx={{\r\n                        minWidth: 220,\r\n                        border: \"2px solid\",\r\n                        borderColor: \"secondary.main\",\r\n                        borderRadius: 2,\r\n                        backgroundColor: \"primary.dark\",\r\n                    }}\r\n                >\r\n                    <FormControl\r\n                        borderColor=\"secondary.main\"\r\n                        sx={{ width: 300 }}\r\n                    >\r\n                        <Select\r\n                            onChange={handleChange}\r\n                            value={selectedBill}\r\n                            MenuProps={{\r\n                                PaperProps: {\r\n                                    sx: {\r\n                                        borderRadius: 2,\r\n                                        backgroundColor: \"primary.light\",\r\n                                        fontStyle: \"bold\",\r\n                                    },\r\n                                },\r\n                            }}\r\n                            sx={{\r\n                                color: \"secondary.main\",\r\n                                border: \"2px primary.dark\",\r\n                                borderRadius: 2,\r\n                                padding: 2,\r\n                            }}\r\n                        >\r\n                            {bills.map((bill) => (\r\n                                <MenuItem value={bill.fileId}>\r\n                                    {bill.fileName}\r\n                                </MenuItem>\r\n                            ))}\r\n                        </Select>\r\n                    </FormControl>\r\n                </Box>\r\n                <div style={{ marginTop: \"12rem\" }}>\r\n                    <Button type=\"contained\" onClick={handleCompareClick}>\r\n                        COMPARE\r\n                    </Button>\r\n                </div>\r\n            </Box>\r\n        </PageLayout>\r\n    );\r\n}\r\n\r\nexport default SelectBill;\r\n","import React from \"react\";\r\nimport PageLayout from \"../../components/PageLayout\";\r\nimport Textfield from \"../../components/TextField\";\r\nimport Button from \"../../components/Button\";\r\nimport ThumbUpIcon from \"@mui/icons-material/ThumbUp\";\r\nimport ThumbDownIcon from \"@mui/icons-material/ThumbDown\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useState } from \"react\";\r\nimport { Box, IconButton, Stack, Typography } from \"@mui/material\";\r\nimport axios from \"axios\";\r\n\r\nfunction Feedback() {\r\n    const [thumbsUpClicked, setThumbsUpClicked] = useState(false);\r\n    const [thumbsDownClicked, setThumbsDownClicked] = useState(false);\r\n    const [additionalFeedback, setAdditionalFeedback] = useState(\"\");\r\n    const navigate = useNavigate();\r\n\r\n    const handleThumbsUpClick = () => {\r\n        setThumbsUpClicked(true);\r\n        setThumbsDownClicked(false);\r\n    };\r\n\r\n    const handleThumbsDownClick = () => {\r\n        setThumbsDownClicked(true);\r\n        setThumbsUpClicked(false);\r\n    };\r\n\r\n    const handleCancelClick = (event) => {\r\n        navigate(-1);\r\n    };\r\n\r\n    const handleSubmit = (event) => {\r\n        if (!additionalFeedback.trim()) {\r\n            alert(\"Please change at least one field before clicking'SUBMIT'.\");\r\n        } else {\r\n            axios\r\n                .post(\"http://localhost:8080/feedback\", {\r\n                    thumbsUpClicked,\r\n                    thumbsDownClicked,\r\n                    additionalFeedback,\r\n                })\r\n                .then((res) => {\r\n                    console.log(res);\r\n                });\r\n            alert(\"Thank you for your feedback.\");\r\n            navigate(-1);\r\n        }\r\n    };\r\n\r\n    return (\r\n        <PageLayout>\r\n            <Box\r\n                sx={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                }}\r\n            >\r\n                <Typography\r\n                    fontSize={{ xs: \"4rem\", sm: \"5rem\" }}\r\n                    fontWeight=\"bold\"\r\n                    color=\"secondary\"\r\n                    my={5}\r\n                >\r\n                    FEEDBACK\r\n                </Typography>\r\n                <Typography\r\n                    fontSize={{ xs: \"1.25rem\", sm: \"1.5rem\" }}\r\n                    color=\"secondary\"\r\n                    mb={3}\r\n                >\r\n                    Did you enjoy using our service?\r\n                </Typography>\r\n\r\n                <Stack\r\n                    spacing={9}\r\n                    direction=\"row\"\r\n                    sx={{\r\n                        marginTop: \"1rem\",\r\n                        marginBottom: \"4rem\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                    }}\r\n                >\r\n                    <IconButton\r\n                        onClick={handleThumbsUpClick}\r\n                        aria-label=\"thumbs-up\"\r\n                        style={{\r\n                            fontSize: \"36px\",\r\n                            borderRadius: \"50%\",\r\n                            backgroundColor: thumbsUpClicked\r\n                                ? \"#E38651\"\r\n                                : \"grey\",\r\n                            color: \"white\",\r\n                            padding: \"8px\",\r\n                        }}\r\n                    >\r\n                        <ThumbUpIcon />\r\n                    </IconButton>\r\n                    <IconButton\r\n                        onClick={handleThumbsDownClick}\r\n                        aria-label=\"thumbs-down\"\r\n                        style={{\r\n                            fontSize: \"36px\",\r\n                            borderRadius: \"50%\",\r\n                            backgroundColor: thumbsDownClicked\r\n                                ? \"#E38651\"\r\n                                : \"grey\",\r\n                            color: \"white\",\r\n                            padding: \"8px\",\r\n                        }}\r\n                    >\r\n                        <ThumbDownIcon />\r\n                    </IconButton>\r\n                </Stack>\r\n                <Typography\r\n                    fontSize={{ xs: \"1.25rem\", sm: \"1.5rem\" }}\r\n                    color=\"secondary\"\r\n                    mb={3}\r\n                >\r\n                    Please include any additional feedback below. Thank you.\r\n                </Typography>\r\n                <Textfield\r\n                    type=\"multilined\"\r\n                    value={additionalFeedback}\r\n                    onChange={(event) =>\r\n                        setAdditionalFeedback(event.target.value)\r\n                    }\r\n                />\r\n                <Stack\r\n                    spacing={9}\r\n                    direction=\"row\"\r\n                    sx={{\r\n                        marginY: \"3rem\",\r\n                        display: \"flex\",\r\n                        justifyContent: \"center\",\r\n                    }}\r\n                >\r\n                    <Button type=\"contained\" onClick={handleCancelClick}>\r\n                        CANCEL\r\n                    </Button>\r\n                    <Button type=\"contained\" onClick={handleSubmit}>\r\n                        SUBMIT\r\n                    </Button>\r\n                </Stack>\r\n            </Box>\r\n        </PageLayout>\r\n    );\r\n}\r\n\r\nexport default Feedback;\r\n","import { useState, useContext } from \"react\";\r\nimport PageLayout from \"../../components/PageLayout\";\r\nimport Textfield from \"../../components/TextField\";\r\nimport Button from \"../../components/Button\";\r\nimport { Context } from \"../../components/Context\";\r\nimport emailValidator from \"email-validator\";\r\nimport { Typography, Box, Stack, Link } from \"@mui/material\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport React from \"react\";\r\n\r\nfunction Login() {\r\n    const { setUser, setUserBill } = useContext(Context);\r\n    const [email, setEmail] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const navigate = useNavigate();\r\n\r\n    const handleLoginClick = (event) => {\r\n        const regex =\r\n            /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]{8,10}$/;\r\n\r\n        // check if email is wrong\r\n        if (!emailValidator.validate(email)) {\r\n            alert(\"Error! Please enter a valid email address.\");\r\n        }\r\n        // check if password length is wrong\r\n        else if (password.length < 8 || password.length > 20) {\r\n            alert(\r\n                \"Invalid password! Password should have between 8 and 20 characters\"\r\n            );\r\n        }\r\n        // check if password is alphanumeric with special character(s)\r\n        else if (!regex.test(password)) {\r\n            alert(\r\n                \"Invalid password! Password should be alphanumeric with 1 upper case letter, 1 smaller case letter and 1 special character minimum\"\r\n            );\r\n        } else {\r\n            axios\r\n                .post(\"http://localhost:8080/login\", { email, password })\r\n                .then((res) => {\r\n                    setUser(res.data);\r\n                    setUserBill(null);\r\n                    navigate(\"/\");\r\n                })\r\n                .catch((error) => {\r\n                    alert(error);\r\n                    setEmail(\"\");\r\n                    setPassword(\"\");\r\n                });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <PageLayout>\r\n            <Box\r\n                sx={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                }}\r\n            >\r\n                <Typography\r\n                    fontSize={{ xs: \"4rem\", sm: \"5rem\" }}\r\n                    fontWeight=\"bold\"\r\n                    color=\"secondary\"\r\n                    my={5}\r\n                >\r\n                    SIGN IN\r\n                </Typography>\r\n                <Stack margin={4}>\r\n                    <Typography fontWeight=\"bold\" color=\"secondary\" pt={2}>\r\n                        EMAIL OR PHONE NUMBER\r\n                    </Typography>\r\n                    <Textfield\r\n                        type=\"outlined\"\r\n                        onChange={(e) => setEmail(e.target.value)}\r\n                        value={email}\r\n                    />\r\n                    <Typography fontWeight=\"bold\" color=\"secondary\" pt={2}>\r\n                        PASSWORD\r\n                    </Typography>\r\n                    <Textfield\r\n                        type=\"password\"\r\n                        onChange={(e) => setPassword(e.target.value)}\r\n                        value={password}\r\n                    />\r\n                </Stack>\r\n                <Button\r\n                    type=\"contained\"\r\n                    onClick={handleLoginClick}\r\n                    sx={{ topMargin: 4 }}\r\n                >\r\n                    SIGN IN\r\n                </Button>\r\n                <Typography fontWeight=\"bold\" color=\"secondary\" pt={2}>\r\n                    Don't have an account yet? Sign up{\" \"}\r\n                    <Link\r\n                        fontWeight=\"bold\"\r\n                        color=\"secondary\"\r\n                        pt={2}\r\n                        component={RouterLink}\r\n                        to=\"/register\"\r\n                    >\r\n                        here.\r\n                    </Link>\r\n                    <br />\r\n                    Or,{\" \"}\r\n                    <Link\r\n                        fontWeight=\"bold\"\r\n                        color=\"secondary\"\r\n                        pt={2}\r\n                        component={RouterLink}\r\n                        to=\"/\"\r\n                    >\r\n                        scan a bill.\r\n                    </Link>\r\n                </Typography>\r\n            </Box>\r\n        </PageLayout>\r\n    );\r\n}\r\n\r\nexport default Login;\r\n","import { useState } from \"react\";\r\nimport PageLayout from \"../../components/PageLayout\";\r\nimport { Grid, Typography, Box, Stack, Link } from \"@mui/material\";\r\nimport Textfield from \"../../components/TextField\";\r\nimport Button from \"../../components/Button\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport React from \"react\";\r\n\r\nfunction Register() {\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [phone, setPhone] = useState(\"\");\r\n    const [password, setPassword] = useState(\"\");\r\n    const navigate = useNavigate();\r\n\r\n    const handleNameChange = (event) => {\r\n        setName(event.target.value);\r\n    };\r\n\r\n    const handleEmailChange = (event) => {\r\n        setEmail(event.target.value);\r\n    };\r\n\r\n    const handlePhoneChange = (event) => {\r\n        if (/^\\d{0,10}$/.test(event.target.value)) {\r\n            setPhone(event.target.value);\r\n        } else {\r\n            alert(\"Error Please enter the Number with 10 digits\");\r\n        }\r\n    };\r\n    const handlePasswordChange = (event) => {\r\n        setPassword(event.target.value);\r\n    };\r\n    const handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const uppercaseRegex = /[A-Z]/;\r\n        const specialCharRegex = /[!@#$%^&*()]/;\r\n        const numberRegex = /[0-9]/;\r\n\r\n        if (!email.includes(\"@\") || !email.includes(\".com\")) {\r\n            alert(\"Invalid email format\");\r\n        } else if (\r\n            !uppercaseRegex.test(password) ||\r\n            !specialCharRegex.test(password) ||\r\n            !numberRegex.test(password)\r\n        ) {\r\n            alert(\r\n                \"Password must have at least one uppercase letter, one special character, and one number\"\r\n            );\r\n        } else if (phone.trim() === \"\" || name.trim() === \"\") {\r\n            alert(\"Phone Number and Name must not be blank\");\r\n            navigate(\"/register\");\r\n        } else {\r\n            axios\r\n                .post(\"http://localhost:8080/register\", {\r\n                    name,\r\n                    email,\r\n                    phone,\r\n                    password,\r\n                })\r\n                .then((res) => {\r\n                    navigate(\"/login\");\r\n                })\r\n                .catch((error) => {\r\n                    alert(\"User already exists\");\r\n                });\r\n        }\r\n    };\r\n\r\n    return (\r\n        <PageLayout>\r\n            <Box\r\n                sx={{\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                }}\r\n            >\r\n                <Typography\r\n                    fontSize={{ xs: \"3rem\", sm: \"4rem\" }}\r\n                    fontWeight=\"bold\"\r\n                    color=\"secondary\"\r\n                    my={1}\r\n                >\r\n                    SIGN UP NOW\r\n                </Typography>\r\n\r\n                <Grid container>\r\n                    <Grid item xs={12} md={12}>\r\n                        <Typography fontWeight=\"bold\" color=\"secondary\" pt={2}>\r\n                            NAME\r\n                        </Typography>\r\n                        <Textfield\r\n                            type=\"outlined\"\r\n                            value={name}\r\n                            onChange={handleNameChange}\r\n                        ></Textfield>\r\n\r\n                        <Typography fontWeight=\"bold\" color=\"secondary\" pt={2}>\r\n                            EMAIL\r\n                        </Typography>\r\n\r\n                        <Textfield\r\n                            type=\"outlined\"\r\n                            value={email}\r\n                            onChange={handleEmailChange}\r\n                        />\r\n                        <Typography fontWeight=\"bold\" color=\"secondary\" pt={2}>\r\n                            PHONE NUMBER\r\n                        </Typography>\r\n                        <Textfield\r\n                            type=\"outlined\"\r\n                            value={phone}\r\n                            onChange={handlePhoneChange}\r\n                        />\r\n                        <Typography fontWeight=\"bold\" color=\"secondary\" pt={2}>\r\n                            PASSWORD\r\n                        </Typography>\r\n                        <Textfield\r\n                            type=\"password\"\r\n                            value={password}\r\n                            onChange={handlePasswordChange}\r\n                        />\r\n                    </Grid>\r\n                </Grid>\r\n                <Stack spacing={9} direction=\"row\" paddingY={5}>\r\n                    <Button type=\"contained\" onClick={handleSubmit}>\r\n                        Register\r\n                    </Button>\r\n                </Stack>\r\n                <Typography\r\n                    fontSize={{ xs: \"1rem\", sm: \"1rem\" }}\r\n                    color=\"secondary\"\r\n                    mb={3}\r\n                >\r\n                    Already have an account? Sign in{\" \"}\r\n                    <Link\r\n                        fontWeight=\"bold\"\r\n                        color=\"secondary\"\r\n                        pt={2}\r\n                        component={RouterLink}\r\n                        to=\"/Login\"\r\n                    >\r\n                        here.\r\n                    </Link>\r\n                    <br />\r\n                    Or,\r\n                    <Link\r\n                        fontWeight=\"bold\"\r\n                        color=\"secondary\"\r\n                        pt={2}\r\n                        component={RouterLink}\r\n                        to=\"/\"\r\n                    >\r\n                        Scan\r\n                    </Link>\r\n                    a bill now.\r\n                </Typography>\r\n            </Box>\r\n        </PageLayout>\r\n    );\r\n}\r\n\r\nexport default Register;\r\n","import React from \"react\";\r\nimport { Typography, InputBase } from \"@mui/material\";\r\n\r\nconst PopupDialog = (props) => {\r\n  const selectedBarDetails = props.value.selectedValue;\r\n  //Display rest of the detials\r\n  return (\r\n    <Typography variant=\"body1\" component=\"div\">\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"left\",\r\n          justifyContent: \"left\",\r\n          color: \"#FEE3D3\",\r\n        }}\r\n      >\r\n        {selectedBarDetails.id}\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"left\",\r\n          justifyContent: \"left\",\r\n          color: \"#FEE3D3\",\r\n        }}\r\n      >\r\n        Provider: {selectedBarDetails.provider}\r\n        <InputBase readOnly={true} style={{ width: \"65px\", height: \"20px\" }} />\r\n      </div>\r\n      <br />\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"left\",\r\n          justifyContent: \"left\",\r\n          color: \"#FEE3D3\",\r\n        }}\r\n      >\r\n        Bill Frequency: {selectedBarDetails.billFrequency}\r\n        <InputBase readOnly={true} style={{ width: \"95px\", height: \"20px\" }} />\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"left\",\r\n          justifyContent: \"left\",\r\n          color: \"#FEE3D3\",\r\n        }}\r\n      >\r\n        Distributor: {selectedBarDetails.distributor}\r\n        <InputBase readOnly={true} style={{ width: \"95px\", height: \"20px\" }} />\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"left\",\r\n          justifyContent: \"left\",\r\n          color: \"#FEE3D3\",\r\n        }}\r\n      >\r\n        Type: {selectedBarDetails.fuelType}\r\n        <InputBase readOnly={true} style={{ width: \"65px\", height: \"20px\" }} />\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"left\",\r\n          justifyContent: \"left\",\r\n          color: \"#FEE3D3\",\r\n        }}\r\n      >\r\n        Cost: {selectedBarDetails.cost}\r\n        <InputBase readOnly={true} style={{ width: \"95px\", height: \"20px\" }} />\r\n      </div>\r\n      <br />\r\n\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"left\",\r\n          justifyContent: \"left\",\r\n          color: \"#FEE3D3\",\r\n        }}\r\n      >\r\n        Peak Charge: {selectedBarDetails.peakCharge}\r\n        <InputBase readOnly={true} style={{ width: \"70px\", height: \"20px\" }} />\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"left\",\r\n          justifyContent: \"left\",\r\n          color: \"#FEE3D3\",\r\n        }}\r\n      >\r\n        Daily Supply Charge: {selectedBarDetails.dailySupplyCharge}\r\n        <InputBase readOnly={true} style={{ width: \"65px\", height: \"20px\" }} />\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"left\",\r\n          justifyContent: \"left\",\r\n          color: \"#FEE3D3\",\r\n        }}\r\n      >\r\n        Shoulder Charge: {selectedBarDetails.shoulderCharge}\r\n        <InputBase readOnly={true} style={{ width: \"65px\", height: \"20px\" }} />\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"left\",\r\n          justifyContent: \"left\",\r\n          color: \"#FEE3D3\",\r\n        }}\r\n      >\r\n        Off Peak Charge: {selectedBarDetails.offPeakCharge}\r\n        <InputBase readOnly={true} style={{ width: \"65px\", height: \"20px\" }} />\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"left\",\r\n          justifyContent: \"left\",\r\n          color: \"#FEE3D3\",\r\n        }}\r\n      >\r\n        Controlled Load Charge: {selectedBarDetails.controlledLoadCharge}\r\n        <InputBase readOnly={true} style={{ width: \"65px\", height: \"20px\" }} />\r\n      </div>\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"left\",\r\n          justifyContent: \"left\",\r\n          color: \"#FEE3D3\",\r\n        }}\r\n      >\r\n        Provider Website: {selectedBarDetails.providerWebsite}\r\n        <InputBase readOnly={true} style={{ width: \"65px\", height: \"20px\" }} />\r\n      </div>\r\n      <br />\r\n      <div\r\n        style={{\r\n          display: \"flex\",\r\n          alignItems: \"left\",\r\n          justifyContent: \"left\",\r\n          color: \"#FEE3D3\",\r\n        }}\r\n      >\r\n        For any additional information, please refer to the provider's website.\r\n      </div>\r\n    </Typography>\r\n  );\r\n};\r\n\r\nexport default PopupDialog;\r\n","import React, { useEffect, useState } from \"react\";\r\n\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Legend,\r\n  Cell,\r\n  ResponsiveContainer,\r\n} from \"recharts\";\r\nimport {\r\n  Dialog,\r\n  DialogTitle,\r\n  DialogContent,\r\n  DialogContentText,\r\n  DialogActions,\r\n  InputBase,\r\n  Grid,\r\n} from \"@mui/material\";\r\nimport PopupDialog from \"../PopupDialog\";\r\nimport Button from \"../Button\";\r\n\r\nconst colors = [\r\n  \"#A95525\",\r\n  \"#E38651\",\r\n  \"#EDB18E\",\r\n  \"#ff7300\",\r\n  \"#e13a00\",\r\n  \"#E74173\",\r\n];\r\n\r\nconst BarChartComponent = (props) => {\r\n  const [selectedValue, setSelectedValue] = useState(null);\r\n  const [open, setOpen] = useState(false);\r\n  const plans = props.value.top5Plans;\r\n\r\n  const userDetail = props.value.userDetail;\r\n  const data = [\r\n    {\r\n      name: userDetail.providerName,\r\n      value: userDetail.billTotalCost,\r\n      color: \"#E74173\",\r\n      id: userDetail.id,\r\n    },\r\n  ];\r\n  //const refinedTop5List = [];\r\n\r\n  // plans.map((item) => {\r\n  //     if (item !== null) {\r\n  //         const temp = item[1];\r\n  //         refinedTop5List.push(temp);\r\n  //     }\r\n  // });\r\n  // console.log(\"Top 5 Plans\", plans);\r\n  plans.forEach((element, index) => {\r\n    const temp1 = {\r\n      name: element.provider,\r\n      value: element.cost,\r\n      id: element.id,\r\n      color: colors[index],\r\n    };\r\n    data.push(temp1);\r\n  });\r\n\r\n  const handleBarClick = (data, index) => {\r\n    const targetId = data.id;\r\n\r\n    const matchingPlan = plans.find((plan) => plan.id === targetId);\r\n    setSelectedValue(matchingPlan);\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <BarChart width={1285} height={600} data={data}>\r\n        <CartesianGrid strokeDasharray=\"3 3\" />\r\n        <XAxis dataKey=\"name\" angle={-35} textAnchor=\"end\" height={130} />\r\n        <YAxis />\r\n        <Tooltip />\r\n        <Bar dataKey=\"value\" fill=\"#8884d8\" onClick={handleBarClick}>\r\n          {data.map((entry, index) => (\r\n            <Cell key={`cell-${index}`} fill={entry.color} />\r\n          ))}\r\n        </Bar>\r\n      </BarChart>\r\n      {selectedValue && (\r\n        <Dialog\r\n          open={open}\r\n          onClose={handleClose}\r\n          PaperProps={{ sx: { backgroundColor: \"#16434F\" } }}\r\n        >\r\n          <DialogContent>\r\n            <PopupDialog value={{ selectedValue }} />\r\n          </DialogContent>\r\n          <DialogActions>\r\n            <Button type=\"contained\" onClick={handleClose}>\r\n              Close\r\n            </Button>\r\n          </DialogActions>\r\n        </Dialog>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BarChartComponent;\r\n","import PageLayout from \"../../components/PageLayout\";\r\nimport Button from \"../../components/Button\";\r\nimport ColumnChart from \"../../components/ColumnChart\";\r\nimport { Typography, Stack, InputBase } from \"@mui/material\";\r\nimport React from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nfunction Comparison() {\r\n    const location = useLocation();\r\n    const { userDetail, top5Plans } = location.state;\r\n\r\n    const inputStyle = {\r\n        color: \"#E74173\", // Change the color here\r\n        fontFamily: \"Arial, sans-serif\", // Change the font here\r\n        fontSize: \"30px\",\r\n    };\r\n\r\n    return (\r\n        <PageLayout>\r\n            <Typography\r\n                fontSize={{ xs: \"4rem\", sm: \"5rem\" }}\r\n                fontWeight=\"bold\"\r\n                color=\"secondary\"\r\n                align=\"center\"\r\n                my={1}\r\n            >\r\n                COMPARISON\r\n            </Typography>\r\n\r\n            <Typography\r\n                fontSize={{ xs: \"1.5rem\", sm: \"2rem\" }}\r\n                fontWeight=\"medium\"\r\n                color=\"secondary\"\r\n                align=\"center\"\r\n                my={1}\r\n            >\r\n                You can save more with\r\n            </Typography>\r\n\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                }}\r\n            >\r\n                <div className=\"chart-container\">\r\n                    <ColumnChart value={{ userDetail, top5Plans }} />\r\n                </div>\r\n            </div>\r\n            <Typography\r\n                fontSize={{ xs: \"1.2rem\", sm: \"1.5rem\" }}\r\n                fontWeight=\"small\"\r\n                color=\"secondary\"\r\n                align=\"center\"\r\n                alignContent=\"center\"\r\n                alignItems=\"center\"\r\n                my={2}\r\n            >\r\n                What you paid with your current retailer:\r\n                <InputBase\r\n                    style={inputStyle}\r\n                    readOnly={true}\r\n                    value={\"AUD \" + userDetail.billTotalCost}\r\n                />\r\n            </Typography>\r\n            <div\r\n                style={{\r\n                    display: \"flex\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                }}\r\n            >\r\n                <Stack spacing={9} direction=\"row\" paddingY={5}>\r\n                    <Button type=\"contained\">Continue</Button>\r\n                </Stack>\r\n            </div>\r\n        </PageLayout>\r\n    );\r\n}\r\nexport default Comparison;\r\n","import { createTheme } from \"@mui/material/styles\";\r\nimport React from \"react\";\r\n\r\nconst Theme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            light: \"#EDB18E\",\r\n            main: \"#FEE3D3\", // peach color\r\n            dark: \"#E38651\", // orange color\r\n        },\r\n        secondary: {\r\n            main: \"#16434F\", // olive gree\r\n        },\r\n        white: {\r\n            main: \"#FFFFFF\", // white\r\n        },\r\n        black: {\r\n            main: \"#000000\", // black\r\n        },\r\n        red: {\r\n            main: \"#B70000\", // red\r\n        },\r\n    },\r\n    components: {\r\n        MuiButton: {\r\n            variants: [\r\n                {\r\n                    props: { variant: \"bold\" },\r\n                    style: {\r\n                        color: \"#FFFFFF\",\r\n                        borderRadius: 0,\r\n                    },\r\n                },\r\n            ],\r\n        },\r\n    },\r\n});\r\n\r\nexport default Theme;\r\n","import { Routes, Route } from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport Home from \"./pages/Home\";\r\nimport BillResults from \"./pages/BillResults\";\r\nimport EditBillResults from \"./pages/EditBillResults\";\r\nimport UploadRetailerPage from \"./pages/UploadRetailerPage\";\r\nimport RetailerResults from \"./pages/RetailerResults\";\r\nimport EditRetailerResults from \"./pages/EditRetailerResults\";\r\nimport SelectBill from \"./pages/SelectBill\";\r\nimport Feedback from \"./pages/Feedback\";\r\nimport Login from \"./pages/Login\";\r\nimport Register from \"./pages/Register\";\r\nimport Comparison from \"./pages/Comparison\";\r\nimport { ThemeProvider } from \"@emotion/react\";\r\nimport Theme from \"./components/Theme\";\r\nimport { Context } from \"./components/Context\";\r\nimport { useContext } from \"react\";\r\n\r\nfunction App() {\r\n    const { user } = useContext(Context);\r\n\r\n    return (\r\n        <ThemeProvider theme={Theme}>\r\n            <Routes>\r\n                <Route path=\"\" element={<Home />} />\r\n                <Route path=\"login\" element={user ? <Home /> : <Login />} />\r\n                <Route\r\n                    path=\"register\"\r\n                    element={user ? <Home /> : <Register />}\r\n                />\r\n                <Route path=\"bill-results\" element={<BillResults />} />\r\n                <Route path=\"edit-bill-results\" element={<EditBillResults />} />\r\n                <Route\r\n                    path=\"upload-retailer\"\r\n                    element={<UploadRetailerPage />}\r\n                />\r\n                <Route path=\"retailer-results\" element={<RetailerResults />} />\r\n                <Route\r\n                    path=\"edit-retailer-results\"\r\n                    element={<EditRetailerResults />}\r\n                />\r\n                <Route path=\"select-bill\" element={<SelectBill />} />\r\n                <Route path=\"feedback\" element={<Feedback />} />\r\n                <Route path=\"comparison\" element={<Comparison />} />\r\n            </Routes>\r\n        </ThemeProvider>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom/client\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport { UserContext } from \"./components/Context\";\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById(\"root\"));\r\nroot.render(\r\n    <BrowserRouter>\r\n        <React.StrictMode>\r\n            <UserContext>\r\n                <App />\r\n            </UserContext>\r\n        </React.StrictMode>\r\n    </BrowserRouter>\r\n);\r\n"],"sourceRoot":""}